{"remainingRequest":"/goinfre/nderek/matcha_private/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/goinfre/nderek/matcha_private/front/src/views/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/goinfre/nderek/matcha_private/front/src/views/Chat.vue","mtime":1605332888201},{"path":"/goinfre/nderek/matcha_private/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/goinfre/nderek/matcha_private/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/goinfre/nderek/matcha_private/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/goinfre/nderek/matcha_private/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgTmF2QmFyIGZyb20gJ0AvY29tcG9uZW50cy9OYXZCYXIudnVlJwppbXBvcnQgSGVhZGVyIGZyb20gJ0AvY29tcG9uZW50cy9IZWFkZXJOYXYudnVlJwoKLy8gaW1wb3J0IHthY3Rpb24sIHN0YXRlfSBmcm9tICdAL3N0b3JlJwoKaW1wb3J0IHthY3Rpb25zLCBzdGF0ZSwgc29ja2V0fSBmcm9tICJAL3N0b3JlIgoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgTmF2QmFyLCBIZWFkZXIgfSwKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlOiBudWxsLAogICAgICBzdGF0ZTogc3RhdGUKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBtZXNzYWdlczogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gc3RhdGUubWVzc2FnZXMKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBtZXNzYWdlczogZnVuY3Rpb24gKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHRoaXMuJHJlZnMubWVzc2FnZS5zY3JvbGxJbnRvVmlldygpKQogICAgfSwgNSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZW5kTWVzc2FnZTogZnVuY3Rpb24gKCkgewogICAgICBzb2NrZXQuY2FsbC5zZW5kTWVzc2FnZVRvKHN0YXRlLm1lc3NhZ2luZ191c2VyLCB0aGlzLm1lc3NhZ2UpCiAgICAgIHNvY2tldC5yZWZyZXNoTWVzc2FnZXMoKQogICAgICB0aGlzLm1lc3NhZ2UgPSAiIgogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gKCkgewogICAgc29ja2V0LmNhbGwuaW5pdGlhdGVDaGF0KHRoaXMuJHJvdXRlLnBhcmFtcy51c2VybmFtZSkKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uICgpIHsKICAgIHNvY2tldC5jYWxsLmNsb3NlQ2hhdCgpCiAgfQp9Cg=="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"header\"><Header /></div>\n    <div class=\"content\">\n      <div class=\"mb-2\">\n        <router-link class=\"text-secondary\" :to=\"`/profile/${$route.params.username}`\">\n        Receiver Profile\n        </router-link>\n      </div>\n      <div class=\"max-w-90 d-flex justify-content-center\">\n        <b-col sm=\"auto\" md=\"6\" lg=\"4\" class=\"rounded-lg shadow bg-light\">\n          <div class=\"message-container\">\n            <br>\n            <template v-for=\"m in messages\">\n\n              <div :key=\"m.index\" v-if=\"m.from_id == state.user.id\" class=\"sent\">\n                <h5 class=\"hour\">{{ m.timestamp }}</h5>\n                <p class=\"sent-bubble\">{{ m.message }}</p>\n              </div>\n              <div v-else :key=\"m.index\" class=\"received\">\n                <h5 class=\"hour\">{{ m.timestamp }}</h5>\n                <p class=\"received-bubble\">{{ m.message }}</p>\n              </div>\n            </template>\n          </div>\n          <div class=\"input-container\">\n            <input\n              v-model=\"message\" ref=\"message\" type=\"text\"\n              placeholder=\"Enter your message\"\n            >\n            <a @click=\"sendMessage()\" class=\"btnsend\">Send</a>\n          </div>\n        </b-col>\n      </div>\n    </div>\n\n    <div class=\"footer\"><NavBar/></div>\n  </div>\n</template>\n\n<script>\n\nimport NavBar from '@/components/NavBar.vue'\nimport Header from '@/components/HeaderNav.vue'\n\n// import {action, state} from '@/store'\n\nimport {actions, state, socket} from \"@/store\"\n\nexport default {\n  components: { NavBar, Header },\n  data: function () {\n    return {\n      message: null,\n      state: state\n    }\n  },\n  computed: {\n    messages: function () {\n      return state.messages\n    }\n  },\n  watch: {\n    messages: function (newVal, oldVal) {\n      setTimeout(() => {\n        this.$nextTick(() => this.$refs.message.scrollIntoView())\n    }, 5);\n    }\n  },\n  methods: {\n    sendMessage: function () {\n      socket.call.sendMessageTo(state.messaging_user, this.message)\n      socket.refreshMessages()\n      this.message = \"\"\n    }\n  },\n  created: function () {\n    socket.call.initiateChat(this.$route.params.username)\n  },\n  beforeDestroy: function () {\n    socket.call.closeChat()\n  }\n}\n</script>\n\n<style>\n\n:root {\n  --background-color: #a5bfd4;\n  --send-color: #c3dbfa;\n  --received-color: #a8a8a8;\n  --light-gray: #dfdfdf;\n  --dark-gray: #858a91;\n}\n\n.btnsend {\n  opacity: 0.7;\n}\n\n.btnsend:hover {\n  opacity: 1;\n}\n.message-container h3 {\n  color: var(--light-gray);\n  border-bottom: 1px solid var(--light-gray);\n  text-align: center;\n  line-height: 0.1rem;\n  margin: 10px 0 30px;\n  text-transform: uppercase;\n  font-size: 1rem;\n}\n\n.message-container h3 span {\n  padding: 0 15px;\n  background-color: #fff;\n}\n\n.message-container div.sent {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\n.message-container div:not(.sent) {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.message-container div:last-child {\n  border-bottom: 1px solid var(--light-gray);\n}\n\n.message-container .hour {\n  color: var(--dark-gray);\n  font-size: 10px;\n}\n\n.message-container p {\n  position: relative;\n}\n\n/* BUBBLE ARROW SENT */\n.sent p:before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: -6px;\n  width: 0px;\n  height: 0px;\n  border-top: 0px solid transparent;\n  border-bottom: 20px solid transparent;\n  border-right: 10px solid var(--send-color);\n}\n\n/* BUBBLE ARROW RECEIVED */\n.received p:before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  right: -6px;\n  width: 0px;\n  height: 0px;\n  border-top: 0px solid transparent;\n  border-bottom: 20px solid transparent;\n  border-left: 10px solid var(--received-color);\n}\n\n.sent-bubble {\n  background-color: var(--send-color);\n}\n\n.received-bubble {\n  background-color: var(--received-color);\n}\n\n.blocked-bubble {\n  background-color: var(--blocked-color);\n}\n\n.sent-bubble,\n.received-bubble,\n.blocked-bubble {\n  max-width: 70%;\n  padding: 10px;\n  margin: 10px 0 20px;\n  text-align: left;\n}\n\n.sent-bubble {\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n  border-top-right-radius: 3px;\n}\n\n.received-bubble {\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n  border-top-left-radius: 3px;\n}\n\n.blocked-bubble {\n  border-radius: 3px;\n}\n\n.input-container {\n  background-color: transparent;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 25px;\n}\n\n.input-container input {\n  background-color: transparent;\n  width: 100%;\n  outline: none;\n  border: none;\n  font-size: 1rem;\n}\n\n.input-container a {\n  text-decoration: none;\n  cursor: pointer;\n  font-weight: bold;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  margin-left: 20px;\n}\n\n</style>"]}]}